apiVersion: apps/v1
kind: Deployment
metadata:
  name: casper-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: casper-api
  template:
    metadata:
      labels:
        app: casper-api
    spec:
      containers:
      - name: casper-api
        image: moimhossain/casper-deom:beta
        ports:
        - containerPort: 8080
        readinessProbe:
          httpGet:
            path: /hello
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /hello
            port: 8080
          initialDelaySeconds: 20
          periodSeconds: 20
---
apiVersion: v1
kind: Service
metadata:
  name: casper-api-svc
spec:
  selector:
    app: casper-api
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8080
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: casper-api-lb
spec:
  selector:
    app: casper-api
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: 8080
  - name: https
    protocol: TCP
    port: 443
    targetPort: 8080
  type: LoadBalancer
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: casper-api-ingress
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /hello
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - casper.20-67-14-31.nip.io
      secretName: casper-api-tls
  rules:
    - host: casper.20-67-14-31.nip.io
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: casper-api-svc
                port:
                  number: 80
